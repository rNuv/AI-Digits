{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/arnavnayak/Documents/WebApps/ai-draw-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport 'fontsource-roboto';\nimport CanvasDraw from 'react-canvas-draw';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  title: {\n    textAlign: 'center'\n  },\n  subtitle: {\n    textAlign: 'center'\n  },\n  header: {}\n});\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    onChange: null,\n    loadTimeOffset: 0,\n    lazyRadius: 5,\n    brushRadius: 4,\n    brushColor: \"#000\",\n    catenaryColor: \"#0a0302\",\n    hideGrid: true,\n    canvasWidth: 280,\n    canvasHeight: 280,\n    saveData: null,\n    hideInterface: true,\n    immediateLoading: true\n  });\n  const [saveableCanvas, setSaveableCanvas] = useState(null);\n  const [imageData, setImageData] = useState(\"\");\n  const [response, setResponse] = useState(\"Loading...\");\n  useEffect(() => {\n    var req = imageData.replaceAll(\"#\", \"%35\");\n    axios.get(`/process_image?image=${req}`).then(res => {\n      setResponse(res.data.image_prediction);\n    });\n  }, [imageData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.header,\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          className: classes.title,\n          children: \"AI Digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          className: classes.subtitle,\n          children: \"A project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: /*#__PURE__*/_jsxDEV(CanvasDraw, {\n        ref: canvasDraw => setSaveableCanvas(canvasDraw),\n        ...state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        saveableCanvas.clear();\n      },\n      color: \"secondary\",\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setImageData(saveableCanvas.getSaveData());\n      },\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Your number is \", response]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wgP0JCJrAkrkjewPg8lkPGBDlCo=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/arnavnayak/Documents/WebApps/ai-draw-app/src/App.js"],"names":["useState","useEffect","axios","CanvasDraw","Typography","AppBar","Button","makeStyles","ThemeProvider","createMuiTheme","useStyles","title","textAlign","subtitle","header","App","classes","state","setState","onChange","loadTimeOffset","lazyRadius","brushRadius","brushColor","catenaryColor","hideGrid","canvasWidth","canvasHeight","saveData","hideInterface","immediateLoading","saveableCanvas","setSaveableCanvas","imageData","setImageData","response","setResponse","req","replaceAll","get","then","res","data","image_prediction","canvasDraw","clear","getSaveData"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport 'fontsource-roboto';\nimport CanvasDraw from 'react-canvas-draw';\nimport Typography from '@material-ui/core/Typography'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport {makeStyles, ThemeProvider, createMuiTheme} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  title:{\n    textAlign: 'center',\n  },\n  subtitle:{\n    textAlign: 'center',\n  },\n  header:{\n    \n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n  const[state, setState] = useState({\n    onChange: null,\n    loadTimeOffset: 0,\n    lazyRadius: 5,\n    brushRadius: 4,\n    brushColor: \"#000\",\n    catenaryColor: \"#0a0302\",\n    hideGrid: true,\n    canvasWidth: 280,\n    canvasHeight: 280,\n    saveData: null,\n    hideInterface: true,\n    immediateLoading: true,\n  });\n  const[saveableCanvas, setSaveableCanvas] = useState(null);\n  const[imageData, setImageData] = useState(\"\");\n  const[response, setResponse] = useState(\"Loading...\");\n\n  useEffect(() => {\n    var req = imageData.replaceAll(\"#\", \"%35\");\n    axios.get(`/process_image?image=${req}`)\n      .then(res => {\n        setResponse(res.data.image_prediction);\n    });\n  }, [imageData]);\n\n  return (\n    <div className=\"container\">\n      <div className={classes.header}>\n        <AppBar>\n          <Typography variant=\"h3\" className={classes.title}>\n            AI Digits\n          </Typography>\n          <Typography variant=\"subtitle1\" className={classes.subtitle}>\n            A project\n          </Typography>\n        </AppBar>\n      </div>\n      <div className=\"canvas\">\n        <CanvasDraw \n          ref={canvasDraw => (setSaveableCanvas(canvasDraw))}\n          {...state}\n        />\n      </div>\n      <Button \n        onClick={()=>{\n          saveableCanvas.clear();\n        }}\n        color=\"secondary\"\n      >\n        Reset\n      </Button>\n      <Button onClick={()=>{\n        setImageData(saveableCanvas.getSaveData());\n      }}>\n        Save\n      </Button>\n      <Typography>\n        Your number is {response}\n      </Typography>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}